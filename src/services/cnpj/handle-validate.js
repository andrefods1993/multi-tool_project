import chalk from "chalk";
import calculateDigit from "./utils/calculate-digit.js";

/**
 * Valida o CNPJ fornecido verificando se os d칤gitos verificadores est칚o corretos.
 *
 * @async
 * @function handleValidate
 * @param {Error} err - Poss칤vel erro ocorrido ao obter o CNPJ.
 * @param {Object} result - Objeto contendo o CNPJ a ser validado.
 */
async function handleValidate(err, result) {
	if (err) {
		// Exibe mensagem de erro se houver um erro ao obter o CNPJ
		console.log(chalk.red.italic("游뚿 Erro ao validar CNPJ:", err.message));
		return;
	}

	const cnpj = result.cnpj;

	// Verifica se todos os d칤gitos do CNPJ s칚o iguais (caso inv치lido)
	if (/^(\d)\1+$/.test(cnpj)) {
		console.log(chalk.red.italic("\n游뚿 CNPJ inv치lido: Todos os d칤gitos s칚o iguais.\n"));
		return;
	}

	try {
		// Calcula o primeiro d칤gito verificador
		const firstDigit = await calculateDigit(cnpj.slice(0, 12), 12);

		// Calcula o segundo d칤gito verificador
		const secondDigit = await calculateDigit(cnpj.slice(0, 12) + firstDigit, 13);

		// Verifica se os d칤gitos verificadores calculados s칚o iguais aos d칤gitos do CNPJ
		if (cnpj.slice(12, 14) === `${firstDigit}${secondDigit}`) {
			console.log(chalk.green("\n游봅 CNPJ v치lido!\n"));
		} else {
			console.log(chalk.redBright("\n游땸 CNPJ inv치lido: D칤gitos verificadores n칚o coincidem.\n"));
		}
	} catch (error) {
		// Exibe mensagem de erro se ocorrer um erro ao calcular os d칤gitos verificadores
		console.log(chalk.red.italic("游뚿 Erro ao calcular d칤gitos verificadores:", error.message));
	}
}

// Exporta a fun칞칚o handleValidate como padr칚o
export default handleValidate;
